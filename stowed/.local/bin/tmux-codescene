#!/usr/bin/env bash

codescene_dev() {
    branch_worktree="$1"

    cd "$branch_worktree/ui" || exit
    npm install
    npx playwright install

    if ! [[ -d "$branch_worktree/ui/clj-shared/dist" ]]; then
        cd "$branch_worktree/ui/clj-shared" || exit
        npm install
        npm run build
    fi

    web_config_path="$branch_worktree/cloud/web/resources/config/local-override.edn"
    if ! [[ -f "$web_config_path" ]]; then
        cp "$CODESCENE_DEV_HOME/../config/web-local-override.edn" "$web_config_path"
    fi

    worker_config_path="$branch_worktree/cloud/worker/resources/config/local-override.edn"
    if ! [[ -f "$worker_config_path" ]]; then
        cp "$CODESCENE_DEV_HOME/../config/worker-local-override.edn" "$worker_config_path"
    fi

    onprem_config_path="$branch_worktree/onprem/my-config.edn"
    if ! [[ -f "$onprem_config_path" ]]; then
        cp "$CODESCENE_DEV_HOME/../config/onprem-my-config.edn" "$onprem_config_path"
    fi

    cd "$branch_worktree" || exit
    make analysis-build-java

    if [ "$2" != "just-build" ]; then
        # Update exclusions for the newly created worktree.
        time-machine-exclusions.sh > /dev/null &
    fi

    cd "$branch_worktree/ui" || exit
    npm start
}

codescene_cloud_web() {
    branch_worktree="$1"

    cd "$branch_worktree/cloud/web" || exit
    npm install
    make bootstrap
    npm run watch
}

codescene_cloud_repl() {
    branch_worktree="$1"

    cd "$branch_worktree/cloud/web" || exit
    clj -M:dev:repl/conjure
}

codescene_onprem_web() {
    branch_worktree="$1"

    cd "$branch_worktree/onprem" || exit
    npm install
    # Need to run both, since webpack-dev-server doesn't write anything to disk
    # (meaning there's no HtmlWebpackPlugin output HTML).
    npm run build:dev
    make ./resources/public/vendor/codescene-bootstrap
    npm run watch
}

codescene_onprem_repl() {
    branch_worktree="$1"

    cd "$branch_worktree/onprem" || exit

    # Copy over db files from `master`.
    db_folder="$branch_worktree/onprem/resources"
    if ! [[ -f "$db_folder/caacs_enterprise.db.mv.db" ]]; then
        master_db_folder="$branch_worktree/../master/onprem/resources"
        cp "$master_db_folder/caacs_enterprise.db.mv.db" "$db_folder"
    fi

    clj -M:dev:repl/conjure
}

case "$1" in
     "tmux")
         branch_name=$(basename "$2")
         clean_arg=$(echo "$branch_name" | tr '/.' '__')
         session_name=$(tmux display-message -p '#S');
         target="$session_name:$clean_arg"

         codescene="$CODESCENE_DEV_HOME/$branch_name"
         cd "$codescene" || exit 1 # Check if it exists and set $PWD for tmux's new-window.

         if tmux has-session -t "$target" 2>/dev/null; then
             exit 0
         fi

         tmux new-window -dn "$clean_arg" ';' \
             split-window -dht "$clean_arg" ';' \
             split-window -dvt "$clean_arg.1" ';' \
             split-window -dvt "$clean_arg.2" ';' \
             split-window -dvt "$clean_arg.1"

         # sleep 1

         tmux send-keys -t "$target.0" "tmux-codescene dev         $2 $3" Enter
         tmux send-keys -t "$target.1" "tmux-codescene cloud-web   $2 $3"
         tmux send-keys -t "$target.2" "tmux-codescene cloud-repl  $2 $3"
         tmux send-keys -t "$target.3" "tmux-codescene onprem-web  $2 $3"
         tmux send-keys -t "$target.4" "tmux-codescene onprem-repl $2 $3"
         ;;

     "dev")
         codescene_dev "$2" "$3"
         ;;

     "cloud-web")
         codescene_cloud_web "$2" "$3"
         ;;

     "cloud-repl")
         codescene_cloud_repl "$2" "$3"
         ;;

     "onprem-web")
         codescene_onprem_web "$2" "$3"
         ;;

     "onprem-repl")
         codescene_onprem_repl "$2" "$3"
         ;;
 esac
