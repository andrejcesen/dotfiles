#!/usr/bin/env bash

# https://superuser.com/questions/270529/monitoring-a-file-until-a-string-is-found
wait_str() {
    file="$1"
    search_term="$2"
    wait_time="${3:-5m}" # 5 minutes default

    (timeout "$wait_time" tail -F "$file" &) | grep -q "$search_term" && return 0
    echo "Timeout of $wait_time reached. Unable to find '$search_term' in '$file'"
    return 1
}

case "$1" in
    "tmux")
        branch_name=$(basename "$2")
        clean_arg=$(echo "$branch_name" | tr '/.' '__')
        session_name=$(tmux display-message -p '#S');
        target="$session_name:$clean_arg"

        pitch="$PITCH_HOME/$branch_name"
        cd "$pitch" || exit 1 # Check if it exists and set $PWD for tmux's new-window.

        if ! tmux has-session -t "$target" 2>/dev/null; then
            tmux new-window -dn "$clean_arg" ';' \
                split-window -dht "$clean_arg" ';' \
                split-window -dt "$clean_arg"
        fi


        tmux send-keys -t "$target.0" C-C Enter
        tmux send-keys -t "$target.1" C-C Enter
        tmux send-keys -t "$target.2" C-C Enter

        log_file="$pitch/pit_dev_log.txt"
        rm -f "$log_file"
        touch "$log_file"

        tmux send-keys -t "$target.0" "tmux-pitch dev $2 $log_file" Enter 
        tmux send-keys -t "$target.1" "tmux-pitch ios $2 $log_file" Enter 
        tmux send-keys -t "$target.2" "tmux-pitch metro $2 $log_file" Enter 
        ;;

    "dev")
        branch_name=$(basename "$2")
        pitch="$PITCH_HOME/$branch_name"
        cd "$pitch" || exit 1

        # Specify host ip for webviews to connect to shadow-cljs when running
        # on a device.
        local_ip=$(osascript -e "IPv4 address of (system info)")
        # Write output to file for other processes to read.
        SHADOW_SERVER_IP_ADDRESS=$local_ip pit dev --re-frisk-events 2>&1 | tee "$3"
        ;;

    "ios")
        branch_name=$(basename "$2")
        pitch="$PITCH_HOME/$branch_name"
        cd "$pitch" || exit 1

        if (wait_str "$3" "\[:mobile\] Compiling ..."); then
            pit ios
        fi
        ;;

    "metro")
        branch_name=$(basename "$2")
        pitch="$PITCH_HOME/$branch_name"
        mobile_app="$PITCH_HOME/$branch_name/mobile-app"
        cd "$pitch" || exit 1

        if (wait_str "$3" "\[:mobile\] Compiling ..."); then
            # `yarn start` needs config to start.
            touch "${mobile_app}/resources/public/static/app/719998b2-df4b-4b86-9793-3f821d281369/config.json"
            touch "${mobile_app}/resources/public/static/app/719998b2-df4b-4b86-9793-3f821d281369/js/config.js"
            # `yarn start` needs config to start.

            # TODO: check if touch above is enough
            # scripts/gen_config.py \
            #     --platform ios \
            #     --stage local-dev \
            #     --input=desktop-app/config.json \
            #     --package-json=mobile-app/package.json \
            #     --output mobile-app/resources/public/static/app/719998b2-df4b-4b86-9793-3f821d281369

            cd "$mobile_app" || exit 1
            yarn start
        fi
        ;;
esac
